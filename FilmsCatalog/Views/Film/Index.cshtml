@model FilmsCatalog.Models.FilmsListViewModel
@using Microsoft.AspNetCore.Identity
@using FilmsCatalog.Data.Entities
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Index";
    var pagesCount = Math.Ceiling((decimal)Model.TotalCount / (decimal)Model.PageSize);
    var user = await UserManager.GetUserAsync(User);
}

<p>
    <a asp-action="Create">Добавить фильм</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>Постер</th>
            <th>Название</th>
            <th>Автор</th>
            <th>Дата релиза</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Films)
        {
            <tr>
                <td>
                    <img height="50" width="75" src="@Url.Action("GetPosterData", "Film", new { filmId = item.Id })" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Director)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseYear)
                </td>
                <td>
                    @if (user.Id == item.UserId)
                    {
                        @Html.ActionLink("Редактировать", "Update", new { item.Id }) <span>|</span>
}
                    @Html.ActionLink("Открыть", "Details", new { item.Id })
                    @if (user.Id == item.UserId)
                    {
                        <span>|</span>
                        using (Html.BeginForm("Delete", "Film", new { item.Id }, FormMethod.Post, true, new { id = "deleteForm" }))
                        {
                            <a href="javascript:document.getElementById('deleteForm').submit();">Удалить</a>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.TotalCount > Model.PageSize)
{
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item @(Model.PageNum == 1 ? "disabled" : string.Empty)">
                <a class="page-link"
                   href="@Url.Action("Index", new { pageNum = Model.PageNum - 1, pageSize = Model.PageSize })" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>
            @for (int i = 0; i < Math.Min(3, pagesCount); i++)
            {
                <li class="page-item @(Model.PageNum == i + 1 ? "active" : string.Empty)">
                    @if (Model.PageNum == i + 1)
                    {
                        <a href="javascript:void(0);" class="page-link">@($"{i + 1}")</a>
                    }
                    else
                    {
                        @Html.ActionLink($"{i + 1}", "Index", new { pageNum = i + 1, pageSize = Model.PageSize }, new { @class = "page-link" })
                    }
                </li>
            }
            <li class="page-item @(pagesCount == Model.PageNum ? "disabled" : string.Empty)">
                <a class="page-link"
                   href="@Url.Action("Index", new { pageNum = Model.PageNum + 1, pageSize = Model.PageSize })" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
        </ul>
    </nav>
}