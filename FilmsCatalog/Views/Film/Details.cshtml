@model FilmsCatalog.Models.FilmViewModel
@using Microsoft.AspNetCore.Identity
@using FilmsCatalog.Data.Entities
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Details";
    var user = await UserManager.GetUserAsync(User);
}

<div>
    <hr />
    <div class="row">
        <div class="form-group">
            <img height="100" width="150" src="@Url.Action("GetPosterData", "Film", new { filmId = Model.Id })" />
        </div>
    </div>
    <dl class="row">
        <dt class="col-sm-2">
            Название
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            Описание
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            Режиссер
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Director)
        </dd>
        <dt class="col-sm-2">
            Дата релиза
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ReleaseYear)
        </dd>
    </dl>
</div>
<div>
    @if (user.Id == Model.UserId)
    {
        @Html.ActionLink("Редактировать", "Update", new { id = Model.Id }) <span>|</span>
    }
    <a asp-action="Index" asp-route-pageNum="1" asp-route-pageSize="@FilmController.PageSize">Назад к списку</a>
</div>
